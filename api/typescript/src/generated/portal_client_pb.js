// source: portal_client.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var portal_remote_endpoint_pb = require('./portal_remote_endpoint_pb.js');
goog.object.extend(proto, portal_remote_endpoint_pb);
var portal_ping_pb = require('./portal_ping_pb.js');
goog.object.extend(proto, portal_ping_pb);
goog.exportSymbol('proto.kurtosis_portal_daemon.ForwardPortArgs', null, global);
goog.exportSymbol('proto.kurtosis_portal_daemon.ForwardPortResponse', null, global);
goog.exportSymbol('proto.kurtosis_portal_daemon.SwitchContextArgs', null, global);
goog.exportSymbol('proto.kurtosis_portal_daemon.SwitchContextResponse', null, global);
goog.exportSymbol('proto.kurtosis_portal_daemon.TransportProtocol', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurtosis_portal_daemon.SwitchContextArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurtosis_portal_daemon.SwitchContextArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurtosis_portal_daemon.SwitchContextArgs.displayName = 'proto.kurtosis_portal_daemon.SwitchContextArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurtosis_portal_daemon.SwitchContextResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurtosis_portal_daemon.SwitchContextResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurtosis_portal_daemon.SwitchContextResponse.displayName = 'proto.kurtosis_portal_daemon.SwitchContextResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurtosis_portal_daemon.ForwardPortArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurtosis_portal_daemon.ForwardPortArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurtosis_portal_daemon.ForwardPortArgs.displayName = 'proto.kurtosis_portal_daemon.ForwardPortArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurtosis_portal_daemon.ForwardPortResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurtosis_portal_daemon.ForwardPortResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurtosis_portal_daemon.ForwardPortResponse.displayName = 'proto.kurtosis_portal_daemon.ForwardPortResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurtosis_portal_daemon.SwitchContextArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.kurtosis_portal_daemon.SwitchContextArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurtosis_portal_daemon.SwitchContextArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurtosis_portal_daemon.SwitchContextArgs.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurtosis_portal_daemon.SwitchContextArgs}
 */
proto.kurtosis_portal_daemon.SwitchContextArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurtosis_portal_daemon.SwitchContextArgs;
  return proto.kurtosis_portal_daemon.SwitchContextArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurtosis_portal_daemon.SwitchContextArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurtosis_portal_daemon.SwitchContextArgs}
 */
proto.kurtosis_portal_daemon.SwitchContextArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurtosis_portal_daemon.SwitchContextArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurtosis_portal_daemon.SwitchContextArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurtosis_portal_daemon.SwitchContextArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurtosis_portal_daemon.SwitchContextArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurtosis_portal_daemon.SwitchContextResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurtosis_portal_daemon.SwitchContextResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurtosis_portal_daemon.SwitchContextResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurtosis_portal_daemon.SwitchContextResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurtosis_portal_daemon.SwitchContextResponse}
 */
proto.kurtosis_portal_daemon.SwitchContextResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurtosis_portal_daemon.SwitchContextResponse;
  return proto.kurtosis_portal_daemon.SwitchContextResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurtosis_portal_daemon.SwitchContextResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurtosis_portal_daemon.SwitchContextResponse}
 */
proto.kurtosis_portal_daemon.SwitchContextResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurtosis_portal_daemon.SwitchContextResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurtosis_portal_daemon.SwitchContextResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurtosis_portal_daemon.SwitchContextResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurtosis_portal_daemon.SwitchContextResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.kurtosis_portal_daemon.ForwardPortArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurtosis_portal_daemon.ForwardPortArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    localPortNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    remotePortNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    remoteEndpointType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    protocol: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurtosis_portal_daemon.ForwardPortArgs}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurtosis_portal_daemon.ForwardPortArgs;
  return proto.kurtosis_portal_daemon.ForwardPortArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurtosis_portal_daemon.ForwardPortArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurtosis_portal_daemon.ForwardPortArgs}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocalPortNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRemotePortNumber(value);
      break;
    case 3:
      var value = /** @type {!proto.kurtosis_portal_daemon.RemoteEndpointType} */ (reader.readEnum());
      msg.setRemoteEndpointType(value);
      break;
    case 4:
      var value = /** @type {!proto.kurtosis_portal_daemon.TransportProtocol} */ (reader.readEnum());
      msg.setProtocol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurtosis_portal_daemon.ForwardPortArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurtosis_portal_daemon.ForwardPortArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalPortNumber();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getRemotePortNumber();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRemoteEndpointType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.kurtosis_portal_daemon.TransportProtocol} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional uint32 local_port_number = 1;
 * @return {number}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.getLocalPortNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurtosis_portal_daemon.ForwardPortArgs} returns this
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.setLocalPortNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 remote_port_number = 2;
 * @return {number}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.getRemotePortNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurtosis_portal_daemon.ForwardPortArgs} returns this
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.setRemotePortNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional RemoteEndpointType remote_endpoint_type = 3;
 * @return {!proto.kurtosis_portal_daemon.RemoteEndpointType}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.getRemoteEndpointType = function() {
  return /** @type {!proto.kurtosis_portal_daemon.RemoteEndpointType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.kurtosis_portal_daemon.RemoteEndpointType} value
 * @return {!proto.kurtosis_portal_daemon.ForwardPortArgs} returns this
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.setRemoteEndpointType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional TransportProtocol protocol = 4;
 * @return {!proto.kurtosis_portal_daemon.TransportProtocol}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.getProtocol = function() {
  return /** @type {!proto.kurtosis_portal_daemon.TransportProtocol} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.kurtosis_portal_daemon.TransportProtocol} value
 * @return {!proto.kurtosis_portal_daemon.ForwardPortArgs} returns this
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.setProtocol = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurtosis_portal_daemon.ForwardPortArgs} returns this
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.clearProtocol = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurtosis_portal_daemon.ForwardPortArgs.prototype.hasProtocol = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurtosis_portal_daemon.ForwardPortResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurtosis_portal_daemon.ForwardPortResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurtosis_portal_daemon.ForwardPortResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurtosis_portal_daemon.ForwardPortResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurtosis_portal_daemon.ForwardPortResponse}
 */
proto.kurtosis_portal_daemon.ForwardPortResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurtosis_portal_daemon.ForwardPortResponse;
  return proto.kurtosis_portal_daemon.ForwardPortResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurtosis_portal_daemon.ForwardPortResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurtosis_portal_daemon.ForwardPortResponse}
 */
proto.kurtosis_portal_daemon.ForwardPortResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurtosis_portal_daemon.ForwardPortResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurtosis_portal_daemon.ForwardPortResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurtosis_portal_daemon.ForwardPortResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurtosis_portal_daemon.ForwardPortResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.kurtosis_portal_daemon.TransportProtocol = {
  TCP: 0,
  UDP: 1
};

goog.object.extend(exports, proto.kurtosis_portal_daemon);
