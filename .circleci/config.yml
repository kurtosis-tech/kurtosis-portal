version: 2.1

orbs:
  kurtosis-docs-checker: kurtosis-tech/docs-checker@0.2.1

parameters:
  go-version:
    type: string
    default: "1.18"
  node-version:
    type: string
    default: "16.13.0"

# NOTE: Because CircleCI jobs run on separate machines from each other, we duplicate steps (like checkout) between jobs. This is because doing the "correct" DRY
#  refactoring of, "one job for checkout, one job for build Docker image, etc." would require a) persisting files between jobs and b) persisting Docker images between
#  jobs. Both are annoying (saving/loading workspaces require re-downloading the workspace over the network, and there doesn't seem to be a good way to do Docker
#  images), so we run everything inside a single job.
# See also: https://discuss.circleci.com/t/can-docker-images-be-preserved-between-jobs-in-a-workflow-without-a-manual-load-save/23388/12
jobs:
  build_api_golang:
    docker:
      - image: "cimg/go:<< pipeline.parameters.go-version>>"
    steps:
      - checkout

      # If the only changes are to the docs, don't run the slow (and expensive) code checks
      # `git diff --exit-code` returns 0 exit code if no changes, and 1 if changes
      - run: |
          if git --no-pager diff --exit-code origin/develop...HEAD -- . ':!docs'; then
            circleci-agent step halt
          fi

      - run: |
          api/golang/scripts/build.sh

  build_api_typescript:
    docker:
      - image: "cimg/node:<< pipeline.parameters.node-version>>"
    steps:
      - checkout

      # If the only changes are to the docs, don't run the slow (and expensive) code checks
      # `git diff --exit-code` returns 0 exit code if no changes, and 1 if changes
      - run: |
          if git --no-pager diff --exit-code origin/develop...HEAD -- . ':!docs'; then
            circleci-agent step halt
          fi

      # The 'git config' and 'go env' steps are to allow Go to read modules from our private Github repos
      # The KURTOSISBOT_GITHUB_TOKEN is a secret provided at CI build time
      - run: |
          api/typescript/scripts/build.sh

  build_daemon:
    docker:
      - image: "cimg/go:<< pipeline.parameters.go-version>>"
    steps:
      - checkout

      # If the only changes are to the docs, don't run the slow (and expensive) code checks
      # `git diff --exit-code` returns 0 exit code if no changes, and 1 if changes
      - run: |
          if git --no-pager diff --exit-code origin/develop...HEAD -- . ':!docs'; then
            circleci-agent step halt
          fi

      - run: |
          daemon/scripts/build.sh

  publish_daemon_artifacts_dry_run:
    docker:
      - image: "cimg/go:<< pipeline.parameters.go-version >>"
    steps:
      # Install goreleaser
      - run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt update
          sudo apt install goreleaser
      - checkout

      - run: |
          cd daemon/
          export GITHUB_TOKEN=${KURTOSISBOT_GITHUB_TOKEN}
          goreleaser release --clean --snapshot

  publish_daemon_artifacts:
    docker:
      - image: "cimg/go:<< pipeline.parameters.go-version >>"
    steps:
      # Install goreleaser
      - run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt update
          sudo apt install goreleaser
      - checkout

      - run: |
          cd daemon/
          goreleaser release --clean

workflows:
  build:
    jobs:
      # -- PR check jobs ------------------------------------------
      - kurtosis-docs-checker/check-docs:
          markdown-link-check-config-json: "{}"
          filters:
            branches:
              ignore:
                - develop
                - main
      - build_api_golang:
          context:
            - github-user
          filters:
            branches:
              ignore:
                - develop
                - main
      - build_api_typescript:
          context:
            - github-user
          filters:
            branches:
              ignore:
                - develop
                - main
      - build_daemon:
          context:
            - github-user
          filters:
            branches:
              ignore:
                - develop
                - main
      - publish_daemon_artifacts_dry_run:
          context:
            - github-user
          requires:
            - build_daemon
            - build_api_typescript
            - build_api_golang
          filters:
            branches:
              ignore:
                - develop
                - main
      - publish_daemon_artifacts:
          context:
            - github-user
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
